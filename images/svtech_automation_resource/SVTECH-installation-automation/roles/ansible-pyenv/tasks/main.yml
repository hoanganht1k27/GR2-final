---
- name: PyENV [STEP 1.1] - Create directories {{ pyenv_root }}
  file:
    dest: "{{ pyenv_root | dirname }}"
    state: directory

- name: PyENV [STEP 1.2] - Create file {{ pyenv_share }}
  file:
    path: "{{ pyenv_share }}"
    state: touch

- name:  PyENV [STEP 2] - Clone pyenv repository
  git:
    repo: "{{ pyenv_repo }}"
    dest: "{{ pyenv_root }}"
    version: "{{ pyenv_version }}"
    # update: "{{ pyenv_update }}"

- name:  PyENV [STEP 3.1] - Clone pyenv-virtualenv repository
  git:
    repo: https://github.com/pyenv/pyenv-virtualenv.git
    dest: "{{ pyenv_virtualenv_root | default(pyenv_root) }}/plugins/pyenv-virtualenv"

- name:  PyENV [STEP 3.2] - Clone pyenv-doctor repository
  git:
    repo: https://github.com/pyenv/pyenv-doctor.git
    dest: "{{ pyenv_virtualenv_root | default(pyenv_root) }}/plugins/pyenv-doctor"

- name:  PyENV [STEP 3.3] - Clone pyenv-installer repository
  git:
    repo: https://github.com/pyenv/pyenv-installer.git
    dest: "{{ pyenv_virtualenv_root | default(pyenv_root) }}/plugins/pyenv-installer"

- name:  PyENV [STEP 3.4] - Clone pyenv-update repository
  git:
    repo: https://github.com/pyenv/pyenv-update.git
    dest: "{{ pyenv_virtualenv_root | default(pyenv_root) }}/plugins/pyenv-update"

- name:  PyENV [STEP 3.5] - Clone pyenv-which-ext repository
  git:
    repo: https://github.com/pyenv/pyenv-which-ext.git
    dest: "{{ pyenv_virtualenv_root | default(pyenv_root) }}/plugins/pyenv-which-ext"

- name: PyENV [STEP 4] - Add configurations to {{ pyenv_share }}
  lineinfile:
    dest: "{{ pyenv_share }}"
    line: |
        export PYENV_ROOT="{{ pyenv_root }}"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
    create: yes

- include_tasks: "RedHat.yml"

- name: PyENV [STEP 5] - Install python {{ python_versions[0] }} and {{ python_versions[1] }}
  shell: "env PYTHON_CONFIGURE_OPTS='--enable-shared' {{ item }}"
  args:
    executable: /bin/bash
  with_items:
    - "{{ pyenv_root }}/bin/pyenv install {{ python_versions[0] }}"
    - "{{ pyenv_root }}/bin/pyenv virtualenv {{ python_versions[0] }} {{ virtualenv_name[0] }}"
    - "{{ pyenv_root }}/bin/pyenv install {{ python_versions[1] }}"
    - "{{ pyenv_root }}/bin/pyenv virtualenv {{ python_versions[1] }} {{ virtualenv_name[1] }}"
  environment:
    HTTP_PROXY: "{{ proxy if (proxy is defined) else ''}}"
    HTTPS_PROXY: "{{ proxy if (proxy is defined) else ''}}"

- name: PyENV [STEP 6] - Install packet for python {{ python_versions[0] }}
  shell: "{{ pyenv_root }}/versions/{{ item[0] }}/envs/{{ virtualenv_name[0] }}/bin/pip install {{ item[1] }}"
  with_nested:
    - "{{ python_versions[0] }}"
    - ['pip==19.3.1', 'wheel==0.36.2', 'setuptools==40.8.0', 'ansible=={{ ansible_vers }}', 'docker-compose', 'pandas', 'influxdb', 'junos-eznc', 'jsnapy==1.3.2', 'jxmlease', 'flask', 'xlrd', 'easysnmp', 'pymysql', 'sqlalchemy', 'mysql-connector', 'networkx', 'tabulate', 'openpyxl', 'pysnmp', 'py2neo', 'pydot', 'jmespath', 'neo4j-driver']
  environment:
    HTTP_PROXY: "{{ proxy if (proxy is defined) else ''}}"
    HTTPS_PROXY: "{{ proxy if (proxy is defined) else ''}}"

- name: PyENV [STEP 7] - Install packet for python {{ python_versions[1] }}
  shell: "{{ pyenv_root }}/versions/{{ item[0] }}/envs/{{ virtualenv_name[1] }}/bin/pip install {{ item[1] }}"
  with_nested:
    - "{{ python_versions[1] }}"
    - ['pip==19.3.1', 'wheel==0.36.2', 'setuptools==40.8.0', 'ansible=={{ ansible_vers }}', 'docker-compose', 'pandas', 'influxdb', 'junos-eznc', 'jsnapy==1.3.2', 'jxmlease', 'flask', 'xlrd', 'easysnmp', 'pymysql', 'sqlalchemy', 'mysql-connector', 'networkx', 'tabulate', 'openpyxl', 'pysnmp', 'py2neo', 'pydot', 'jmespath', 'neo4j-driver']
  environment:
    HTTP_PROXY: "{{ proxy if (proxy is defined) else ''}}"
    HTTPS_PROXY: "{{ proxy if (proxy is defined) else ''}}"

- name: PyENV [STEP 8] - Set default version {{ pyenv_default.split('/') }}
  shell: "{{ item }}"
  with_items:
    - "{{ pyenv_root }}/bin/pyenv local {{ pyenv_default.split('/') | last}}"
    - "{{ pyenv_root }}/bin/pyenv global {{ pyenv_default.split('/') | last}}"
