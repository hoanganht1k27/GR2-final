input {
  beats {
    port => {{ beats.logstash.listen_port.filebeat }}
    client_inactivity_timeout => 3600
  }
}

filter {
  if ([message] =~ /nginx health check/) {
      drop {}
  }
  if ([message] =~ /haproxy/) {
      drop {}
  }
  if ([message] =~ /health_check/) {
      drop {}
  }

  if "radius" == [service][type] {
    mutate {
      gsub => ["message", "\"", "'"]
    }
    if "radius-auth-log" == [log][type] {
      grok {
      match => { "message" => '(?:(\'%{RAS_DATE:ras_date}\'))?,(?:(\'%{RAS_HOUR:ras_hour}\'))?,(?:(\'%{DATA:ras_client}\'))?,(?:(\'%{DATA:full_name}\'))?,(?:(\'%{DATA:acc_rej}\'?))?,(?:(\'%{USERNAME:user_name}\'))?,(?:(\'%{IP:nas_ip_address}\'))?,(?:(\'%{INT:nas_port}\'))?,(?:(\'%{INT:service_type}\'))?,(?:(\'%{INT:framed_protocol}\'))?,(?:(\'%{IPV4:framed_ip_address}\'))?,(?:(\'%{DATA:framed_ipv6_address}\'))?,(?:(\'%{IP:framed_ip_netmask}\'))?,(?:(\'%{INT:framed_compression}\'))?,(?:(\'%{IP:login_ip_host}\'))?,(?:(\'%{DATA:callback_number}\'))?,(?:(\'%{DATA:state}\'))?,(?:(\'%{DATA:called_station_id}\'))?,(?:(\'%{DATA:calling_station_id}\'))?,(?:(\'%{DATA:nas_identifier}\'))?,(?:(\'%{BASE16NUM:proxy_state}\'))?,(?:(\'%{INT:event_timestamp}\'))?,(?:(\'%{INT:nas_port_type}\'))?,(?:(\'%{INT:port_limit}\'))?,(?:(\'%{DATA:login_lat_port}\'))?' }
        patterns_dir => ["/etc/logstash/patterns"]
        patterns_files_glob => "radius_log"
      }
    }
    else if "radius-acct-log" == [log][type] {
      grok {
      match => { "message" => '(?:(\'%{RAS_DATE:ras_date}\'))?,(?:(\'%{RAS_HOUR:ras_hour}\'))?,(?:(\'%{DATA:ras_client}\'))?,(?:(\'%{DATA:record_type}\'))?,(?:(\'%{DATA:full_name}\'))?,(?:(\'%{DATA:auth_type}\'))?,(?:(\'%{USERNAME:user_name}\'))?,(?:(\'%{IPV4:framed_ip_address}\'))?,(?:(\'%{IP:nas_ip_address}\'))?,(?:(\'%{DATA:unisphere_dhcp_mac_addr}\'))?,(?:(\'%{DATA:acct_session_id_01}\'))?,(?:(\'%{INT:nas_port}\'))?,(?:(\'%{DATA:nas_port_id}\'))?,(?:(\'%{INT:nas_port_type}\'))?,(?:(\'%{DATA:nas_identifier}\'))?,(?:(\'%{DATA:acct_session_id_02}\'))?,(?:(\'%{INT:acct_Session_Time}\'))?,(?:(\'%{DATA:acct_termination-cause}\'))?,(?:(\'%{DATA:unisphere_egress_policy_name}\'))?,(?:(\'%{DATA:unisphere_ingress_policy_name}\'))?,(?:(\'%{DATA:framed_pool}\'))?,(?:(\'%{DATA:framed_ipv6_address}\'))?,(?:(\'%{DATA:delegated_ipv6_prefix}\'))?,(?:(\'%{DATA:framed_ipv6_pool}\'))?,(?:(\'%{DATA:jnpr_ipv6_delegated_pool_name}\'))?,(?:(\'%{DATA:jnpr_ipv6_egress_policy_name}\'))?,(?:(\'%{DATA:jnpr_ipv6_ingress_policy_name}\'))?,(?:(\'%{DATA:zte_rate_ctrl_scr_down}\'))?,(?:(\'%{DATA:zte_rate_ctrl_scr_up}\'))?,(?:(\'%{DATA:zte_ipv4_vrf_name}\'))?,(?:(\'%{DATA:zte_rate_ctrl_scr_down_v6}\'))?,(?:(\'%{DATA:zte_rate_ctrl_scr_up_v6}\'))?' }
        patterns_dir => ["/etc/logstash/patterns"]
        patterns_files_glob => "radius_log"
      }
    }

    mutate {
      add_field => { "ras_time" => "%{ras_date} %{ras_hour}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}{name}" ]
    }

    date {
      match => ["ras_time", "MM/DD/YYYY HH:mm:ss"]
      target => "ras_time"
    }

    mutate {
      remove_field => [ "message" ]
      remove_field => [ "ras_date" ]
      remove_field => [ "ras_hour" ]
    }
  }
}

output {
  if "filebeat" == [agent][type] {
    if [@metadata][pipeline] {
      elasticsearch {
        hosts => {{ es_master_http }}
        index => "filebeat"
        manage_template => false
        pipeline => "%{[@metadata][pipeline]}" 
        cacert => "/etc/logstash/certs/{{ inventory_hostname }}.pem"
        user => "{{ beats.logstash.logstash_writer.username }}"
        password => "{{ beats.logstash.logstash_writer.password }}"
        ssl_certificate_verification => false
      }
    }
    else if "radius" == [service][type] {
      elasticsearch {
        hosts => {{ es_master_http }}
        index => "radius-log"
        cacert => "/etc/logstash/certs/{{ inventory_hostname }}.pem"
        user => "{{ beats.logstash.logstash_writer.username }}"
        password => "{{ beats.logstash.logstash_writer.password }}"
        ssl_certificate_verification => false
      }
    }
    else {
      elasticsearch {
        hosts => {{ es_master_http }}
        index => "filebeat"
        cacert => "/etc/logstash/certs/{{ inventory_hostname }}.pem"
        user => "{{ beats.logstash.logstash_writer.username }}"
        password => "{{ beats.logstash.logstash_writer.password }}"
        ssl_certificate_verification => false
      }
    }
  }
}
